{"version":3,"sources":["recipe.module.css","Recipe.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","maxWidth","maxHeight","img","font","fontSize","Recipe","title","image","ingredients","classes","style","marginTop","padding","Grid","container","spacing","justify","item","key","Card","className","CardActionArea","CardMedia","component","alt","CardContent","Typography","gutterBottom","variant","color","map","ingredient","text","CardActions","Button","size","App","useState","recipes","setRecipes","search","setsearch","query","setquery","useEffect","getRecipes","a","fetch","response","json","data","console","log","hits","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","ReactDOM","render","document","getElementById"],"mappings":"2JACAA,EAAOC,QAAU,CAAC,OAAS,yB,kMCWrBC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVC,UAAU,KAGZC,IAAI,CACFD,UAAU,KAEZE,KAAK,CACJC,SAAS,MA2EGC,EAvEA,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,YAErBC,EAAUZ,IAEd,OAEI,yBAAKa,MAAO,CAAEC,UAAW,GAAIC,QAAS,KACtC,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAAIC,QAAQ,UAEjC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAKZ,GACd,kBAACa,EAAA,EAAD,CAAMC,UAAWX,EAAQV,MACvB,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWF,UAAWX,EAAQP,IAC5BqB,UAAU,MACVC,IAAI,wBAGJjB,MAAOA,EACPD,MAAM,0BAER,kBAACmB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKL,UAAU,MAC7CjB,GAGH,kBAACoB,EAAA,EAAD,CAAYN,UAAWX,EAAQN,KAAMyB,QAAQ,YAAYC,MAAM,iBAA/D,IAAgF,4BAAKrB,EAAYsB,KAAI,SAAAC,GAAU,OAC3G,4BAAKA,EAAWC,aAOxB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQN,MAAM,WAA3B,SAGA,kBAACK,EAAA,EAAD,CAAQC,KAAK,QAAQN,MAAM,WAA3B,oBCTHO,EAlDH,WAEV,IAFe,EAKgBC,mBAAS,IALzB,mBAKTC,EALS,KAKCC,EALD,OAMcF,mBAAS,IANvB,mBAMRG,EANQ,KAMCC,EAND,OAOYJ,mBAAS,WAPrB,mBAORK,EAPQ,KAODC,EAPC,KASfC,qBAAU,WACTC,MACC,CAACH,IAEH,IAQMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBApBf,WAoBe,oBAnBd,sCAkBG,cACXM,EADW,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGhBC,QAAQC,IAAIF,EAAKG,MACjBd,EAAWW,EAAKG,MAJA,2CAAH,qDAQhB,OACE,yBAAKjC,UAAU,OACb,0BAAMkC,SAfQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAYmBrB,UAAY,eACvC,2BAAOA,UAAW,aAAYqC,KAAK,OAAOC,MAASlB,EAAQmB,SAnB1C,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAmBjB,4BAAStC,UAAU,gBAAeqC,KAAK,UAAvC,WAIA,yBAAKrC,UAAU,WACdkB,EAAQR,KAAI,SAAA+B,GAAM,OAEjB,kBAAC,EAAD,CAAQ3C,IAAM2C,EAAOA,OAAOC,MAAOxD,MAASuD,EAAOA,OAAOC,MAAOvD,MAASsD,EAAOA,OAAOtD,MACxFC,YAAcqD,EAAOA,OAAOrD,oBCzCpCuD,IAASC,OAAS,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f34c83a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2qDTZ\"};","import React from 'react'\r\nimport style from './recipe.module.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    maxHeight:400\r\n   \r\n  },\r\n  img:{\r\n    maxHeight:150\r\n  },\r\n  font:{\r\n   fontSize:12\r\n  }\r\n});\r\n\r\nconst Recipe = ({title,image,ingredients}) =>{\r\n\r\n  const classes = useStyles();\r\n   \r\n    return(\r\n\r\n        <div style={{ marginTop: 20, padding: 20 }}>\r\n        <Grid container spacing={40} justify=\"center\">\r\n          \r\n            <Grid item key={title}>\r\n              <Card className={classes.root}>\r\n                <CardActionArea>\r\n                  <CardMedia className={classes.img}\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    \r\n                    \r\n                    image={image}\r\n                    title=\"Contemplative Reptile\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {title}\r\n                    </Typography>\r\n                    \r\n                    <Typography className={classes.font} variant=\"subtitle2\" color=\"textSecondary\"> <ol>{ingredients.map(ingredient => (\r\n                        <li>{ingredient.text}</li>\r\n                      ))\r\n\r\n                    }</ol></Typography>\r\n                    \r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Share\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Learn More\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n        \r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     /**    <div className={style.recipe}>\r\n         <br></br>\r\n         <img src ={image} alt=\"\"></img>\r\n         <h1 >{title}</h1>\r\n         <ol>\r\n         {ingredients.map(ingredient => (\r\n              <li>{ingredient.text}</li>\r\n            ))\r\n        }\r\n         </ol>\r\n\r\n         </div> */\r\n    \r\n\r\nexport default Recipe;","import React, { useEffect , useState } from 'react';\nimport './App.css';\nimport Recipe from './Recipe'\n\nconst App = () =>{\n \n  const APP_ID = '5ef29d85';\n  const APP_KEY = ' b3a29014721ddf4d05428b6a367d3453';\n    \n  const[recipes , setRecipes]  = useState([]);\n  const [search , setsearch] = useState(\"\");\n  const [query, setquery]  = useState('chicken');\n\n  useEffect(()=>{\n   getRecipes();    \n  },[query])\n\n  const updatesearch = e =>{\n    setsearch(e.target.value);\n  }\n  const getSearch = e =>{\n    e.preventDefault();\n    setquery(search)\n    setsearch(\"\")\n  }\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n     const data = await response.json();\n     console.log(data.hits);\n     setRecipes(data.hits)\n\n  }  \n\n  return(\n    <div className=\"App\">\n      <form onSubmit={getSearch} className = \"search-form\">\n      <input className= \"search-bar\"type=\"text\" value = {search} onChange = {updatesearch}/>\n      <button  className=\"search-button\"type=\"submit\">\n      Search\n      </button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe => (\n            \n        <Recipe key= {recipe.recipe.label} title = {recipe.recipe.label} image = {recipe.recipe.image} \n        ingredients ={recipe.recipe.ingredients} />\n      ))}\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(  <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}